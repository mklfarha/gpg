package server

import (
	"{{.Identifier}}/core"
	pb "{{.Identifier}}/idl/gen"

	"go.uber.org/fx"
	"go.uber.org/zap"
	"google.golang.org/grpc"
	"google.golang.org/grpc/health"
	"google.golang.org/grpc/health/grpc_health_v1"
	"google.golang.org/grpc/reflection"
)

type server struct {
	pb.Unimplemented{{.Name}}Server
	Core *core.Implementation
}

type Params struct {
	fx.In
	Logger *zap.Logger
	Core   *core.Implementation
}

func New(params Params) *grpc.Server {
	s := grpc.NewServer()
	grpc_health_v1.RegisterHealthServer(s, health.NewServer())
	pb.Register{{.Name}}Server(s, &server{
		Core: params.Core,
	})
	reflection.Register(s)
	return s
}