package auth

import (	
	"net/http"
	"time"
	"{{.Identifier}}/core"	
)

var jwtKey = []byte("{{.Auth.JWTKey}}")

type TokenResponse struct {
	Token   string
	Expires time.Time
}

type Interface interface {
	SignIn(w http.ResponseWriter, r *http.Request)
	Validate(w http.ResponseWriter, r *http.Request)
	Refresh(w http.ResponseWriter, r *http.Request)
	ClaimsFromHeader(w http.ResponseWriter, r *http.Request) (*Claims, error)
}

type Implementation struct {
	core *core.Implementation
}

func New(c *core.Implementation) (Interface, error) {
	i := Implementation{
		core: c,
	}

	http.HandleFunc("/signin", i.SignIn)
	http.HandleFunc("/validate", i.Validate)
	http.HandleFunc("/refresh", i.Refresh)
	return &i, nil
}
